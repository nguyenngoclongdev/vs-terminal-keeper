{
    "name": "terminal-keeper",
    "displayName": "Terminal Keeper",
    "description": "Elevate your terminal experience! Effortlessly configuration, seamlessly restore your last session, and manage sessions with ease. Personalize your workspace with colorful themes and boost productivity by importing commands swiftly.",
    "icon": "assets/logo.png",
    "version": "1.1.55",
    "main": "./dist/extension.js",
    "browser": "./dist/web/extension.js",
    "preview": false,
    "qna": "marketplace",
    "repository": {
        "type": "git",
        "url": "https://github.com/nguyenngoclongdev/vs-terminal-keeper"
    },
    "bugs": {
        "url": "https://github.com/nguyenngoclongdev/vs-terminal-keeper/issues"
    },
    "sponsor": {
        "url": "https://github.com/sponsors/nguyenngoclongdev"
    },
    "homepage": "https://nguyenngoclongdev.github.io/vs-terminal-keeper",
    "galleryBanner": {
        "color": "#11131C",
        "theme": "dark"
    },
    "badges": [
        {
            "url": "https://img.shields.io/badge/Support%20this%20project-%F0%9F%92%96-green.svg?style=flat-square",
            "href": "https://github.com/sponsors/nguyenngoclongdev",
            "description": "Support us!"
        }
    ],
    "categories": [
        "Programming Languages",
        "Debuggers",
        "Testing",
        "Other"
    ],
    "keywords": [
        "terminal",
        "session",
        "startup",
        "restore",
        "save",
        "remove",
        "internal",
        "manager",
        "switch",
        "bash",
        "cmd",
        "command",
        "run",
        "powershell",
        "pwsh",
        "script",
        "theme",
        "zsh",
        "shell",
        "presets",
        "console",
        "wsl",
        "history",
        "quick",
        "setup",
        "execute",
        "macro",
        "workspace",
        "csh",
        "dash",
        "ksh",
        "sh",
        "tcsh"
    ],
    "contributes": {
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "terminalKeeperActivitybar",
                    "title": "Terminal Keeper",
                    "icon": "assets/explorer.svg"
                }
            ]
        },
        "viewsWelcome": [
            {
                "view": "terminalKeeperActivityView",
                "contents": "Welcome to Terminal Keeper.\nLet's start by generating the configuration.\n[Generate Configuration](command:terminal-keeper.generate)\nTo learn more about how to manage the terminal session [read our docs!](https://github.com/nguyenngoclongdev/vs-terminal-keeper/)"
            }
        ],
        "views": {
            "terminalKeeperActivitybar": [
                {
                    "id": "terminalKeeperActivityView",
                    "name": ""
                }
            ]
        },
        "submenus": [
            {
                "id": "import.submenu",
                "label": "Import Session"
            }
        ],
        "commands": [
            {
                "command": "terminal-keeper.generate",
                "category": "Terminal Keeper",
                "title": "Generate Configuration"
            },
            {
                "command": "terminal-keeper.clear-all",
                "category": "Terminal Keeper",
                "title": "Clear All"
            },
            {
                "command": "terminal-keeper.abort-all",
                "category": "Terminal Keeper",
                "title": "Abort All"
            },
            {
                "command": "terminal-keeper.kill-all",
                "category": "Terminal Keeper",
                "title": "Kill All"
            },
            {
                "command": "terminal-keeper.active",
                "category": "Terminal Keeper",
                "title": "Active Session",
                "icon": "$(run-all)"
            },
            {
                "command": "terminal-keeper.open",
                "category": "Terminal Keeper",
                "title": "Open Configuration",
                "icon": "$(gear)"
            },
            {
                "command": "terminal-keeper.save",
                "category": "Terminal Keeper",
                "title": "Save Session",
                "enablement": "false"
            },
            {
                "command": "terminal-keeper.remove",
                "category": "Terminal Keeper",
                "title": "Remove Session"
            },
            {
                "command": "terminal-keeper.refresh-activity",
                "title": "Refresh",
                "icon": "$(refresh)"
            },
            {
                "command": "terminal-keeper.navigate-activity",
                "title": "Edit",
                "icon": "$(search)"
            },
            {
                "command": "terminal-keeper.collapse-all-activity",
                "title": "Collapse All",
                "icon": "$(collapse-all)"
            },
            {
                "command": "terminal-keeper.active-session-activity",
                "title": "Active Session",
                "icon": "$(run)"
            },
            {
                "command": "terminal-keeper.send-to-new-terminal-activity",
                "title": "Send to new Terminal",
                "icon": "$(send)"
            },
            {
                "command": "terminal-keeper.send-to-current-terminal-activity",
                "title": "Send to current Terminal"
            },
            {
                "command": "terminal-keeper.copy-command-activity",
                "title": "Copy"
            },
            {
                "command": "terminal-keeper.help-and-feedback-activity",
                "title": "Help & Feedback"
            },
            {
                "command": "terminal-keeper.import-from-npm",
                "title": "From npm (e.g. package.json)"
            },
            {
                "command": "terminal-keeper.import-from-composer",
                "title": "From composer (e.g. composer.json)"
            },
            {
                "command": "terminal-keeper.import-from-make",
                "title": "From makefile (e.g. Makefile, makefile)"
            },
            {
                "command": "terminal-keeper.import-from-gradle",
                "title": "From gradle (e.g. build.gradle, test.gradle)"
            },
            {
                "command": "terminal-keeper.import-from-pipenv",
                "title": "From pipenv (e.g. Pipfile, pipfile)"
            },
            {
                "command": "terminal-keeper.import-from-ant",
                "title": "From ant (e.g. build.xml)"
            },
            {
                "command": "terminal-keeper.import-from-grunt",
                "title": "From grunt (e.g. GRUNTFILE.JS)"
            },
            {
                "command": "terminal-keeper.import-from-gulp",
                "title": "From gulp (e.g. gulpfile.mjs, gulpfile.js, GULPFILE.js)"
            }
        ],
        "menus": {
            "import.submenu": [
                {
                    "command": "terminal-keeper.import-from-npm",
                    "group": "source@1"
                },
                {
                    "command": "terminal-keeper.import-from-composer",
                    "group": "source@2"
                },
                {
                    "command": "terminal-keeper.import-from-make",
                    "group": "source@3"
                },
                {
                    "command": "terminal-keeper.import-from-gradle",
                    "group": "source@4"
                },
                {
                    "command": "terminal-keeper.import-from-pipenv",
                    "group": "source@5"
                },
                {
                    "command": "terminal-keeper.import-from-ant",
                    "group": "source@6"
                },
                {
                    "command": "terminal-keeper.import-from-grunt",
                    "group": "source@7"
                },
                {
                    "command": "terminal-keeper.import-from-gulp",
                    "group": "source@8"
                }
            ],
            "editor/context": [
                {
                    "submenu": "import.submenu",
                    "group": "import"
                }
            ],
            "view/title": [
                {
                    "command": "terminal-keeper.active",
                    "when": "view == terminal && config.terminal-keeper.quickRun == true",
                    "group": "navigation"
                },
                {
                    "command": "terminal-keeper.active",
                    "when": "view == terminalKeeperActivityView",
                    "group": "navigation@1"
                },
                {
                    "command": "terminal-keeper.open",
                    "when": "view == terminalKeeperActivityView",
                    "group": "navigation@2"
                },
                {
                    "command": "terminal-keeper.collapse-all-activity",
                    "when": "view == terminalKeeperActivityView",
                    "group": "navigation@3"
                },
                {
                    "command": "terminal-keeper.refresh-activity",
                    "when": "view == terminalKeeperActivityView",
                    "group": "activity@1"
                },
                {
                    "command": "terminal-keeper.clear-all",
                    "when": "view == terminalKeeperActivityView",
                    "group": "activity@2"
                },
                {
                    "command": "terminal-keeper.abort-all",
                    "when": "view == terminalKeeperActivityView",
                    "group": "activity@3"
                },
                {
                    "command": "terminal-keeper.kill-all",
                    "when": "view == terminalKeeperActivityView",
                    "group": "activity@4"
                },
                {
                    "submenu": "import.submenu",
                    "when": "view == terminalKeeperActivityView",
                    "group": "tk1@1"
                },
                {
                    "command": "terminal-keeper.save",
                    "when": "view == terminalKeeperActivityView",
                    "group": "tk1@2"
                },
                {
                    "command": "terminal-keeper.remove",
                    "when": "view == terminalKeeperActivityView",
                    "group": "tk1@3"
                },
                {
                    "command": "terminal-keeper.help-and-feedback-activity",
                    "when": "view == terminalKeeperActivityView",
                    "group": "tk2@1"
                }
            ],
            "view/item/context": [
                {
                    "command": "terminal-keeper.active-session-activity",
                    "when": "viewItem == session-context",
                    "group": "inline@1"
                },
                {
                    "command": "terminal-keeper.send-to-new-terminal-activity",
                    "when": "viewItem == terminal-array-context || viewItem == terminal-context",
                    "group": "inline@1"
                },
                {
                    "command": "terminal-keeper.send-to-new-terminal-activity",
                    "when": "viewItem == terminal-context",
                    "group": "terminal@1"
                },
                {
                    "command": "terminal-keeper.send-to-current-terminal-activity",
                    "when": "viewItem == terminal-context",
                    "group": "terminal@2"
                },
                {
                    "command": "terminal-keeper.copy-command-activity",
                    "when": "viewItem == terminal-context",
                    "group": "terminal@3"
                },
                {
                    "command": "terminal-keeper.navigate-activity",
                    "when": "viewItem == terminal-context",
                    "group": "terminal@4"
                }
            ],
            "explorer/context": [
                {
                    "when": "explorerResourceIsFolder",
                    "command": "terminal-keeper.active"
                }
            ]
        },
        "configuration": {
            "title": "Terminal Keeper",
            "properties": {
                "terminal-keeper.activateOnStartup": {
                    "type": "boolean",
                    "default": null,
                    "description": "Activated the session when Visual Studio Code starts up."
                },
                "terminal-keeper.active": {
                    "type": "string",
                    "default": null,
                    "description": "Used to determine which session to use."
                },
                "terminal-keeper.keepExistingTerminals": {
                    "type": "boolean",
                    "default": null,
                    "description": "Keep existing terminals open when a session is executed."
                },
                "terminal-keeper.noClear": {
                    "type": "boolean",
                    "default": null,
                    "description": "A Boolean variable indicating whether to execute the clear command during initialization. If the value is true, the clear command will not be executed upon initialization. If the value is false, the clear command will be executed."
                },
                "terminal-keeper.theme": {
                    "type": "string",
                    "default": null,
                    "enum": [
                        "default",
                        "inkwell",
                        "chaos",
                        "tribe",
                        "iconic",
                        "neon",
                        "solarized",
                        "dice"
                    ],
                    "description": "The theme can either automatically select colors/icons or manually."
                },
                "terminal-keeper.killProcess": {
                    "type": "boolean",
                    "default": false,
                    "description": "Kill the active process when the terminal is closed.",
                    "tags": [
                        "preview"
                    ]
                },
                "terminal-keeper.wslSupport": {
                    "type": "boolean",
                    "default": false,
                    "description": "When enable, will convert wsl path to windows path when connect to WSL.",
                    "tags": [
                        "experimental"
                    ]
                },
                "terminal-keeper.quickRun": {
                    "type": "boolean",
                    "default": true,
                    "description": "Add a button to quick active session from the terminal tab.",
                    "tags": [
                        "preview"
                    ]
                },
                "terminal-keeper.hideCommandsInExplorerDescriptions": {
                    "type": "boolean",
                    "default": false,
                    "description": "Hide the terminal commands in the explorer tree item descriptions."
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run vscode-desktop:publish && npm run vscode-web:publish",
        "vscode-desktop:publish": "npm run build -- --minify",
        "vscode-web:publish": "npm run build:webext -- --mode production --devtool false",
        "lint": "eslint src --ext ts",
        "cs": "changeset",
        "test": "node ./dist/__test__/runTest.js",
        "clean": "rm -rf dist node_modules web/build web/node_modules *.vsix",
        "build": "node esbuild.js",
        "build:webext": "webpack",
        "watch": "tsc -watch -p ./",
        "watch:webext": "webpack --watch"
    },
    "engines": {
        "vscode": "^1.64.0"
    },
    "activationEvents": [
        "onStartupFinished"
    ],
    "devDependencies": {
        "@changesets/cli": "^2.26.1",
        "@types/glob": "^8.1.0",
        "@types/mocha": "^10.0.1",
        "@types/node": "^20.2.5",
        "@types/vscode": "^1.64.0",
        "@types/xml2js": "^0.4.14",
        "@types/webpack-env": "^1.18.1",
        "@typescript-eslint/eslint-plugin": "^5.59.8",
        "@typescript-eslint/parser": "^5.59.8",
        "@vscode/test-electron": "^2.3.2",
        "assert": "^2.0.0",
        "buffer": "^6.0.3",
        "constants-browserify": "^1.0.0",
        "crypto-browserify": "^3.12.0",
        "esbuild": "^0.17.19",
        "eslint": "^8.41.0",
        "glob": "^10.2.6",
        "mocha": "^10.2.0",
        "os-browserify": "^0.3.0",
        "path-browserify": "^1.0.1",
        "process": "^0.11.10",
        "stream-browserify": "^3.0.0",
        "timers-browserify": "^2.0.12",
        "ts-loader": "^9.4.3",
        "typescript": "^5.0.4",
        "webpack": "^5.84.1",
        "webpack-cli": "^5.1.1"
    },
    "dependencies": {
        "@vscode-utility/fs-browserify": "^1.0.8",
        "@vscode-utility/terminal-browserify": "^1.0.5",
        "@sgarciac/bombadil": "^2.3.0",
        "glob": "11.0.0",
        "xml2js": "^0.6.2"
    },
    "author": {
        "name": "Nguyen Ngoc Long",
        "url": "https://nguyenngoclongdev.github.io"
    },
    "publisher": "nguyenngoclong",
    "license": "MIT"
}
